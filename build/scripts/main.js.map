{
  "version": 3,
  "sources": ["source/scripts/index.js", "source/scripts/get-weather.js", "source/scripts/weather.js", "source/scripts/country-weather.js", "source/scripts/main.js"],
  "sourcesContent": ["const fieldDate = document.querySelector('.weather-info__time');\n\n\nconst createTime = () => {\n    let today = new Date();\n\n    let hours = today.getHours().toString().padStart(2, '0');\n    let minutes = today.getMinutes().toString().padStart(2, '0'); \n\n    const option = {\n        weekday: 'long',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n    }\n\n    const currentDate = today.toLocaleDateString('ru-RU', option)\n    fieldDate.textContent = `${hours}:${minutes} ${currentDate}`;\n}\n\n\nconst updateTime = () => {\n    document.addEventListener('DOMContentLoaded', () => {\n        createTime();\n        setInterval(createTime, 1000);\n    })\n}\n\nexport {updateTime};", "const getWeather = async (city) => {\n    console.log(city)\n    try {\n        const response = await fetch(`http://api.weatherapi.com/v1/current.json?key=62e8139d4e7244d893b32610252002&q=${city}&aqi=no&lang=ru`);\n        if (!response.ok) {\n            throw new Error(`\u041E\u0448\u0438\u0431\u043A\u0430 HTTP: ${response.status}`);\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"\u041F\u0440\u043E\u0438\u0437\u043E\u0448\u043B\u0430 \u043E\u0448\u0438\u0431\u043A\u0430:\", error.message);\n        throw error;\n    }\n};\n\nexport {getWeather}", "const weatherWind = document.querySelector('.weather__details-count-wind')\nconst weatherHumadity = document.querySelector('.weather__details-count-humadity')\nconst weatherTempMin = document.querySelector('.weather__details-count-temp-min')\nconst weatherTempFeel = document.querySelector('.weather__details-count-temp-feel')\nconst weatherCloudy = document.querySelector('.weather__details-count-cloudy')\nconst weatherCurrent = document.querySelector('.weather__details-current-weather')\nconst weatherCity = document.querySelector('.weather-info__city')\nconst weatherTemp = document.querySelector('.weather-info__degrees');\nconst weatherDetailsIcon = document.querySelector('.weather__details-icon')\n\nconst distributesWeather = (weather) => {\n    weatherCity.textContent = `${weather.location.name}`;\n    weatherCurrent.textContent = `${weather.current.condition.text}`;\n    weatherCloudy.textContent = `${weather.current.cloud}%`;\n    weatherTempFeel.textContent = `${weather.current.feelslike_c}`;\n    weatherTempMin.textContent = `${weather.current.temp_c}`;\n    weatherHumadity.textContent = `${weather.current.humidity}%`;\n    weatherWind.textContent = `${weather.current.wind_kph} \u043A\u043C/\u0447`;\n    weatherTemp.textContent = `${Math.trunc(weather.current.temp_c)}\u00B0`;\n    weatherDetailsIcon.style.backgroundImage = `url(${weather.current.condition.icon})`;\n}\n\nexport {distributesWeather};", "import { changesCountry } from \"./main\";\n\nconst selectCountry = document.querySelector('.weather__city-select');\n\nconst chooseCountry = () => {\n    selectCountry.addEventListener('change', () => {\n        const city = selectCountry.value;\n        changesCountry(city);\n    })\n}\n\nexport {chooseCountry};", "import { updateTime } from \"./index.js\";\nimport { getWeather } from \"./get-weather.js\";\nimport { distributesWeather } from \"./weather.js\"\nimport { chooseCountry } from \"./country-weather.js\";\n\nupdateTime()\nchooseCountry();\nconst changesCountry = (city) => {\n    getWeather(city).then((weather) => {\n        distributesWeather(weather);\n    });\n}\n\n\nexport {changesCountry};"],
  "mappings": ";AAAA,IAAM,YAAY,SAAS,cAAc,qBAAqB;AAG9D,IAAM,aAAa,MAAM;AACrB,MAAI,QAAQ,oBAAI,KAAK;AAErB,MAAI,QAAQ,MAAM,SAAS,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AACvD,MAAI,UAAU,MAAM,WAAW,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAE3D,QAAM,SAAS;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,EACV;AAEA,QAAM,cAAc,MAAM,mBAAmB,SAAS,MAAM;AAC5D,YAAU,cAAc,GAAG,KAAK,IAAI,OAAO,IAAI,WAAW;AAC9D;AAGA,IAAM,aAAa,MAAM;AACrB,WAAS,iBAAiB,oBAAoB,MAAM;AAChD,eAAW;AACX,gBAAY,YAAY,GAAI;AAAA,EAChC,CAAC;AACL;;;AC1BA,IAAM,aAAa,OAAO,SAAS;AAC/B,UAAQ,IAAI,IAAI;AAChB,MAAI;AACA,UAAM,WAAW,MAAM,MAAM,kFAAkF,IAAI,iBAAiB;AACpI,QAAI,CAAC,SAAS,IAAI;AACd,YAAM,IAAI,MAAM,8CAAgB,SAAS,MAAM,EAAE;AAAA,IACrD;AACA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACX,SAAS,OAAO;AACZ,YAAQ,MAAM,gGAAqB,MAAM,OAAO;AAChD,UAAM;AAAA,EACV;AACJ;;;ACbA,IAAM,cAAc,SAAS,cAAc,8BAA8B;AACzE,IAAM,kBAAkB,SAAS,cAAc,kCAAkC;AACjF,IAAM,iBAAiB,SAAS,cAAc,kCAAkC;AAChF,IAAM,kBAAkB,SAAS,cAAc,mCAAmC;AAClF,IAAM,gBAAgB,SAAS,cAAc,gCAAgC;AAC7E,IAAM,iBAAiB,SAAS,cAAc,mCAAmC;AACjF,IAAM,cAAc,SAAS,cAAc,qBAAqB;AAChE,IAAM,cAAc,SAAS,cAAc,wBAAwB;AACnE,IAAM,qBAAqB,SAAS,cAAc,wBAAwB;AAE1E,IAAM,qBAAqB,CAAC,YAAY;AACpC,cAAY,cAAc,GAAG,QAAQ,SAAS,IAAI;AAClD,iBAAe,cAAc,GAAG,QAAQ,QAAQ,UAAU,IAAI;AAC9D,gBAAc,cAAc,GAAG,QAAQ,QAAQ,KAAK;AACpD,kBAAgB,cAAc,GAAG,QAAQ,QAAQ,WAAW;AAC5D,iBAAe,cAAc,GAAG,QAAQ,QAAQ,MAAM;AACtD,kBAAgB,cAAc,GAAG,QAAQ,QAAQ,QAAQ;AACzD,cAAY,cAAc,GAAG,QAAQ,QAAQ,QAAQ;AACrD,cAAY,cAAc,GAAG,KAAK,MAAM,QAAQ,QAAQ,MAAM,CAAC;AAC/D,qBAAmB,MAAM,kBAAkB,OAAO,QAAQ,QAAQ,UAAU,IAAI;AACpF;;;AClBA,IAAM,gBAAgB,SAAS,cAAc,uBAAuB;AAEpE,IAAM,gBAAgB,MAAM;AACxB,gBAAc,iBAAiB,UAAU,MAAM;AAC3C,UAAM,OAAO,cAAc;AAC3B,mBAAe,IAAI;AAAA,EACvB,CAAC;AACL;;;ACJA,WAAW;AACX,cAAc;AACd,IAAM,iBAAiB,CAAC,SAAS;AAC7B,aAAW,IAAI,EAAE,KAAK,CAAC,YAAY;AAC/B,uBAAmB,OAAO;AAAA,EAC9B,CAAC;AACL;",
  "names": []
}
